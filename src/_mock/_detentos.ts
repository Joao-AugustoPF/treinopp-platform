import type {
  IDetento,
  IDetentoSocial,
  IDetentoHistorico,
} from 'src/features/detentos/detento/types';

import {
  Cor,
  Boca,
  Cela,
  Sexo,
  Rosto,
  Nariz,
  Dentes,
  Cabelos,
  Galeria,
  CorOlhos,
  EstadoCivil,
  Escolaridade,
  Comportamento,
} from 'src/features/detentos/detento/types';

import { _mock } from './_mock';

// ----------------------------------------------------------------------

export const _detentos: IDetento[] = Array.from({ length: 24 }, (_, index) => ({
  Id: _mock.id(index),
  Nome: _mock.fullName(index),
  Sexo: Object.values(Sexo)[index % Object.values(Sexo).length],
  DataNascimento: new Date(1980 + index, 0, 1).toISOString(),
  Galeria: Object.values(Galeria)[index % Object.values(Galeria).length],
  Cela: Object.values(Cela)[index % Object.values(Cela).length],
  CreatedAt: new Date(2024, 0, 1).toISOString(),
  UpdatedAt: new Date(2024, 0, 1).toISOString(),
  CreatedBy: _mock.id(index),
  UpdatedBy: _mock.id(index),
  IsDeleted: false,
  FotoPerfil: _mock.image.avatar(index),
  Fotos: [...Array(index % 10)].map(() => _mock.image.avatar(index)),
  CID: `CID${Math.floor(Math.random() * 10000)}`,
  Telefone: _mock.phoneNumber(index),
  Cor: Object.values(Cor)[index % Object.values(Cor).length],
  Rosto: Object.values(Rosto)[index % Object.values(Rosto).length],
  CorOlhos: Object.values(CorOlhos)[index % Object.values(CorOlhos).length],
  Nariz: Object.values(Nariz)[index % Object.values(Nariz).length],
  Boca: Object.values(Boca)[index % Object.values(Boca).length],
  Dentes: Object.values(Dentes)[index % Object.values(Dentes).length],
  Cabelos: Object.values(Cabelos)[index % Object.values(Cabelos).length],
  Altura: `${Math.floor(160 + Math.random() * 40)}cm`,
  SinaisParticulares: index % 3 === 0 ? 'Cicatriz no braço direito' : null,
  TatuagensQuantidade: index % 2 === 0 ? `${Math.floor(Math.random() * 10)}` : null,
  TatuagensLocalizacao: index % 2 === 0 ? 'Braço esquerdo, costas' : null,
}));

export const _detentosSocial: IDetentoSocial[] = Array.from({ length: 24 }, (_, index) => ({
  Id: _mock.id(index),
  IsDeleted: false,
  Bairro: _mock.fullAddress(index),
  Cep: _mock.phoneNumber(index),
  CidadeOrigem: _mock.fullAddress(index),
  EstadoOrigem: _mock.fullAddress(index),
  PaisOrigem: _mock.fullAddress(index),
  Logradouro: _mock.fullAddress(index),
  Escolaridade: Object.values(Escolaridade)[index % Object.values(Escolaridade).length],
  FilhosQuantidade: Math.floor(Math.random() * 10),
  EstadoCivil: Object.values(EstadoCivil)[index % Object.values(EstadoCivil).length],
  NomeFamiliar: _mock.fullName(index),
  MatriculaFamiliar: _mock.phoneNumber(index),
  NomeConjuge: _mock.fullName(index),
  DataUltimaVisitaSocial: new Date(2024, 0, 1),
  DataProximaVisitaSocial: new Date(2024, 0, 1),
  DataUltimaVisitaIntima: new Date(2024, 0, 1),
  DataProximaVisitaIntima: new Date(2024, 0, 1),
  RG: _mock.phoneNumber(index),
  CPF: _mock.phoneNumber(index),
  NomeMae: _mock.fullName(index),
  NomePai: _mock.fullName(index),
  Religiao: _mock.fullName(index),
  Profissao: _mock.fullName(index),
  Vulgo: _mock.fullName(index),
  CreatedAt: new Date(2024, 0, 1).toISOString(),
  UpdatedAt: new Date(2024, 0, 1).toISOString(),
  CreatedBy: _mock.id(index),
  UpdatedBy: _mock.id(index),
  Nome: _mock.fullName(index),
  DetentoId: _mock.id(index),
}));

export const _detentosHistory: IDetentoHistorico[] = Array.from({ length: 24 }, (_, index) => ({
  Id: _mock.id(index),
  IsDeleted: false,
  CreatedAt: new Date(2024, 0, 1).toISOString(),
  UpdatedAt: new Date(2024, 0, 1).toISOString(),
  CreatedBy: _mock.id(index),
  UpdatedBy: _mock.id(index),
  DetentoId: _mock.id(index),
  Nome: _mock.fullName(index),
  UnidadeId: _mock.id(index),
  Comportamento: Object.values(Comportamento)[index % Object.values(Comportamento).length],
  Historico: [
    'Deu entrada na CPSLA através de Guia de Recolhimento firmada pelo delegado de Polícia Civil, preso por Ordem Judicial (prisão preventiva) pela prática do crime de Homicídio previsto no Art. 121 do CPB.',
    'Transferido da Penitenciária de Regime Fechado por determinação judicial, conforme ofício nº 2024/GAB/SEJUC, mantendo prisão preventiva.',
    'Recebeu progressão de regime para o semiaberto, conforme decisão do juiz da Vara de Execuções Penais, processo nº 0001234-56.2024.8.23.0010.',
    'Participou do programa de ressocialização através de trabalho na oficina de marcenaria, demonstrando bom comportamento e interesse em aprender.',
    'Recebeu visita do defensor público para acompanhamento processual e orientações jurídicas referentes ao processo nº 0007890-12.2024.8.23.0010.',
  ][index % 5],
}));
